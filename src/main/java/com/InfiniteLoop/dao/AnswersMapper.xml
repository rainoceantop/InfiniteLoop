<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.InfiniteLoop.dao.AnswersMapper">
  <resultMap id="BaseResultMap" type="Answers">
    <id column="answer_id" jdbcType="INTEGER" property="answerId" />
    <result column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="answered_time" jdbcType="TIMESTAMP" property="answeredTime" />
    <result column="answer_likes" jdbcType="INTEGER" property="answerLikes" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="Answers">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    answer_id, question_id, user_id, answered_time, answer_likes
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answers
    where answer_id = #{answerId,jdbcType=INTEGER}
  </select>
  <select id="selectByQuestionId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answers
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from answers
    where answer_id = #{answerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Answers">
    insert into answers (answer_id, question_id, user_id,
      answered_time, answer_likes, content
      )
    values (#{answerId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{answeredTime,jdbcType=TIMESTAMP}, #{answerLikes,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="Answers">
    insert into answers
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="answerId != null">
        answer_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="answeredTime != null">
        answered_time,
      </if>
      <if test="answerLikes != null">
        answer_likes,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="answerId != null">
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="answeredTime != null">
        #{answeredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerLikes != null">
        #{answerLikes,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Answers">
    update answers
    <set>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="answeredTime != null">
        answered_time = #{answeredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerLikes != null">
        answer_likes = #{answerLikes,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="Answers">
    update answers
    set question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      answered_time = #{answeredTime,jdbcType=TIMESTAMP},
      answer_likes = #{answerLikes,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Answers">
    update answers
    set question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      answered_time = #{answeredTime,jdbcType=TIMESTAMP},
      answer_likes = #{answerLikes,jdbcType=INTEGER}
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
</mapper>
