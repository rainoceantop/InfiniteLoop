<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.InfiniteLoop.dao.QuestionsMapper">
  <resultMap id="BaseResultMap" type="Questions">
    <id column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="question_asked_time" jdbcType="TIMESTAMP" property="questionAskedTime" />
    <result column="question_title" jdbcType="VARCHAR" property="questionTitle" />
    <result column="question_likes" jdbcType="INTEGER" property="questionLikes" />
    <result column="question_language" jdbcType="VARCHAR" property="questionLanguage" />
    <result column="question_up_id" jdbcType="LONGVARCHAR" property="questionUpId" />
    <result column="question_down_id" jdbcType="LONGVARCHAR" property="questionDownId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="Questions">
    <result column="question_content" jdbcType="LONGVARCHAR" property="questionContent" />
  </resultMap>
  <sql id="Base_Column_List">
    question_id, user_id, question_asked_time, question_title, question_likes, question_language
  </sql>
  <sql id="Blob_Column_List">
    question_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from questions
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <select id="selectAllWithoutBlobs" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from questions order by question_asked_time desc
  </select>
  <select id="selectByLanguageTag" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from questions
    <where>
      <if test="_parameter != null">
        locate(concat(concat('[',#{_parameter}),']'),concat(concat('[',REPLACE(question_language,',','],[')),']')) > 0 order by question_asked_time desc
      </if>
    </where>
  </select>
  <select id="selectByQuestionTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from questions
    <where>
      <if test="_parameter != null">
        question_title like "%${_parameter}%" order by question_asked_time desc
      </if>
    </where>
  </select>
  <select id="selectQuestionUpId" parameterType="java.lang.Integer" resultType="java.lang.String">
    select question_up_id from questions where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <select id="selectQuestionDownId" parameterType="java.lang.Integer" resultType="java.lang.String">
    select question_down_id from questions where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from questions
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Questions">
    insert into questions (question_id, user_id, question_asked_time, 
      question_title, question_likes, question_language, 
      question_content)
    values (#{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{questionAskedTime,jdbcType=TIMESTAMP}, 
      #{questionTitle,jdbcType=VARCHAR}, #{questionLikes,jdbcType=INTEGER}, #{questionLanguage,jdbcType=VARCHAR}, 
      #{questionContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Questions">
    insert into questions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        question_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="questionAskedTime != null">
        question_asked_time,
      </if>
      <if test="questionTitle != null">
        question_title,
      </if>
      <if test="questionLikes != null">
        question_likes,
      </if>
      <if test="questionLanguage != null">
        question_language,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
      <if test="questionUpId != null">
        question_up_id,
      </if>
      <if test="questionDownId != null">
        question_down_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="questionAskedTime != null">
        #{questionAskedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionLikes != null">
        #{questionLikes,jdbcType=INTEGER},
      </if>
      <if test="questionLanguage != null">
        #{questionLanguage,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
      #{questionContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="questionUpId != null">
        #{questionUpId,jdbcType=LONGVARCHAR},
      </if>
      <if test="questionDownId != null">
        #{questionDownId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Questions">
    update questions
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="questionAskedTime != null">
        question_asked_time = #{questionAskedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionTitle != null">
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionLikes != null">
        question_likes = #{questionLikes,jdbcType=INTEGER},
      </if>
      <if test="questionLanguage != null">
        question_language = #{questionLanguage,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateQuestionLikesByQuestionId" parameterType="Map">
    update questions
    <set>
      <if test="rank == 'up'">
        question_likes = question_likes + 1,
      </if>
      <if test="rank == 'down'">
        question_likes = question_likes - 1,
      </if>
    </set>
    where question_id = #{questionId}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="Questions">
    update questions
    set user_id = #{userId,jdbcType=INTEGER},
      question_asked_time = #{questionAskedTime,jdbcType=TIMESTAMP},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_likes = #{questionLikes,jdbcType=INTEGER},
      question_language = #{questionLanguage,jdbcType=VARCHAR},
      question_content = #{questionContent,jdbcType=LONGVARCHAR}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Questions">
    update questions
    set user_id = #{userId,jdbcType=INTEGER},
      question_asked_time = #{questionAskedTime,jdbcType=TIMESTAMP},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_likes = #{questionLikes,jdbcType=INTEGER},
      question_language = #{questionLanguage,jdbcType=VARCHAR}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateQuestionUpId" parameterType="Map">
    update questions
    set question_up_id = concat(question_up_id,concat(",",#{userId,jdbcType=INTEGER}))
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateQuestionDownId" parameterType="Map">
    update questions
    set question_Down_id = concat(question_down_id,concat(",",#{userId,jdbcType=INTEGER}))
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
</mapper>
