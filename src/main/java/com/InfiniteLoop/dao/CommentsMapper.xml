<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.InfiniteLoop.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="Comments">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="commented_time" jdbcType="TIMESTAMP" property="commentedTime" />
    <result column="comment_likes" jdbcType="INTEGER" property="commentLikes" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="Comments">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, question_id, user_id, commented_time, comment_likes
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectByQuestionId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Comments">
    insert into comments (comment_id, question_id, user_id, 
      commented_time, comment_likes, content
      )
    values (#{commentId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{commentedTime,jdbcType=TIMESTAMP}, #{commentLikes,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="commentedTime != null">
        commented_time,
      </if>
      <if test="commentLikes != null">
        comment_likes,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentedTime != null">
        #{commentedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikes != null">
        #{commentLikes,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Comments">
    update comments
    <set>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentedTime != null">
        commented_time = #{commentedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLikes != null">
        comment_likes = #{commentLikes,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="Comments">
    update comments
    set question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      commented_time = #{commentedTime,jdbcType=TIMESTAMP},
      comment_likes = #{commentLikes,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Comments">
    update comments
    set question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      commented_time = #{commentedTime,jdbcType=TIMESTAMP},
      comment_likes = #{commentLikes,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>
